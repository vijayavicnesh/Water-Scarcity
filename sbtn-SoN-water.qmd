---
title: "SBTN State of Nature Water unified layers"
subtitle: "water availability and water pollution"
author: "Rafael Camargo"
date: "March 30, 2023"
engine: knitr
format:
  html:
    toc: true
execute:
  warning: false    
---

## 1. Setup

Load required packages

```{r}
if (!require("pacman")) install.packages("pacman")
pacman::p_load("here", "dplyr", "magrittr", "sf", "raster", "stars", "exactextractr", "skimr", "readr", "tidyr")
```

```{r}
sf::sf_use_s2(FALSE) # due to issues in HydroBASINS geometries
```

## 2. Load data

```{r}
my_lib <- "C:/Users/Rafael.Camargo/wwfgermany/FB-OuR-Daten - WRF/ws_gis/1_library" 
```

### 2.1. Water Availability

#### 2.1.1. Baseline Water Stress [Hofste et al. 2019](https://www.wri.org/data/aqueduct-global-maps-30-data)

```{r}
bws <- st_read(here(my_lib, "aqueduct30_V01_2019", "baseline", "annual", "arcmap", "y2019m07d12_aqueduct30_v01.gdb"), layer = "annual")
```

#### 2.1.2. Water Depletion [Brauman et al. 2016](http://www.earthstat.org/water-depletion-watergap3-basins/)

```{r}
wdp <- raster(here(my_lib, "WaterDepletion_WaterGap3", "WaterDepletionCat_WG3.tif"))
```

#### 2.1.3. Blue Water Scarcity [Mekonnen & Hoekstra 2016](https://doi.org/10.1126/sciadv.1500323)

```{r}
wsb <- raster(here(my_lib, "BlueWaterScarcity", "WS_blue_monthly_rasters", "WSbl_monthly_30m", "ws_avg.tif"))
```

### 2.2. Water Pollution

#### 2.2.1. Coastal Eutrophication Potential [Hofste et al. 2019](https://www.wri.org/data/aqueduct-global-maps-30-data)

```{r}
cep <- bws
```

#### 2.2.2. Nitrate-Nitrite Concentration [Damania et al. 2019](https://wbwaterdata.org/dataset/global-nitrate-nitrite-surface-water)

```{r}
nox_csv <- read_csv(here(my_lib, "WorldBank_ML_Quality", "noxn_preds_05_16_19.csv"))
```

*Spatial grid*
```{r}
sp_grid <- read_csv(here(my_lib, "WorldBank_ML_Quality", "ML_data_gridcell_match.csv"))
```

#### 2.2.3. Periphyton Growth Potential [McDowell et al. 2020](https://figshare.com/s/e44fe7319585183d888f)

*Total Nitrogen Concentration*
```{r}
tnc <- raster(here(my_lib, "water_quality_mcdowell", "data_from_author", "WQ_Variables_Extraction", "TN_Conc.tif"))
```

*Total Phosphorus Concentration*
```{r}
tpc <- raster(here(my_lib, "water_quality_mcdowell", "data_from_author", "WQ_Variables_Extraction", "TP_Conc.tif"))
```

### 2.3. Aggregation unit

#### 2.3.1. WMO Basins and Sub-Basins [GRDC 2020](https://panda.maps.arcgis.com/home/item.html?id=be4b6f13121b4670ad8f006bc1908e14)

*To add name of basins*
```{r}
wmo_basins <- st_read(here(my_lib, "WMO_basins2020", "wmobb_basins.shp")) %>%
  dplyr::select(WMOBB_id = WMOBB, WMOBB_name = WMOBBName, region = REGNAME)
```

#### 2.3.2. HydroSHEDS HydroBASINS Level 6 [Lehner & Grill 2013](https://www.hydrosheds.org/products/hydrobasins)

```{r}
h6 <- st_read(here(my_lib, "hydrosheds", "hybas_lev06_v1c.shp")) %>%
  dplyr::select(HYBAS_ID) %>%
  mutate(HYBAS_ID = as.factor(HYBAS_ID)) %>%
  st_join(wmo_basins, largest = TRUE)
```

#### 2.3.3. Export / Fast load

```{r}
# write_rds(h6, here("output", "h6.rds"))
h6 <- read_rds(here("output", "h6.rds"))
```

### 2.4. Clean environment

```{r}
rm(my_lib, wmo_basins)
```

## 3. Clean and Classify data to 1-5 values

### 3.1. Water Availability

#### 3.1.1. Baseline Water Stress

```{r}
bws_n <- bws %>%
  mutate(bws_n = if_else(bws_label == "Arid and Low Water Use", 5, bws_cat), .before = bws_label) %>%
  dplyr::select(bws_raw, bws_n, bws_label, geometry = Shape)
```

#### 3.1.2. Water Depletion

```{r}
wdp_reclass <- matrix(
  c(
    0,NA,
    1,1, # <=5% annual depletion
    2,2, # >5–25% annual depletion
    5,3, # >25–75% annual depletion, Dry-Year
    6,4, # >25–75% annual depletion, Seasonal
    7,5, # >75–100% annual depletion
    8,5  # >100% annual depletion
  ),
  ncol=2, byrow=TRUE
)
```

```{r}
wdp_n <- reclassify(wdp, wdp_reclass)
```

```{r}
wdp_n <- exact_extract(wdp_n, h6, fun = c("mean", "median", "quantile", "majority", "coefficient_of_variation"), quantiles = 0.75,
                       append_cols = "HYBAS_ID", progress = TRUE) 

skim(wdp_n)
```

```{r}
wdp_n <- wdp_n %>%
  mutate(
    wdp_raw = median,
    wdp_n = round(median),
    wdp_label = case_when(
      wdp_n == 1 ~ "<=5% annual depletion",
      wdp_n == 2 ~ ">5–25% annual depletion",
      wdp_n == 3 ~ ">25–75% annual depletion, Dry-Year",
      wdp_n == 4 ~ ">25–75% annual depletion, Seasonal",
      wdp_n == 5 ~ ">75% annual depletion"
    )
  ) %>%
  dplyr::select(HYBAS_ID, wdp_raw:wdp_label)
```

#### 3.1.3. Blue Water Scarcity

```{r}
wsb_n <- exact_extract(wsb, h6, fun = c("mean", "median", "quantile", "majority", "coefficient_of_variation"), quantiles = 0.75,
                       append_cols = "HYBAS_ID", progress = TRUE)

skim(wsb_n)

filter(wsb_n, coefficient_of_variation > 1) %>% nrow()/nrow(wsb_n) # 28% of h6 basins show high variability
```

```{r}
wsb_n <- wsb_n %>%
  mutate(
    wsb_raw = median,
    wsb_n = case_when(
      median <= 0.2 ~ 1,
      between(median, 0.2, 1.0) ~ 2,
      between(median, 1.0, 2.0) ~ 3,
      between(median, 2.0, 5.0) ~ 4,
      median > 5.0 ~ 5
    ),
    wsb_label = case_when(
      wsb_n == 1 ~ "Very Low Blue Water Scarcity (<=0.2)",
      wsb_n == 2 ~ "Low Blue Water Scarcity (>0.2-1.0)",
      wsb_n == 3 ~ "Moderate Blue Water Scarcity (>1.0-2.0)",
      wsb_n == 4 ~ "Significant Blue Water Scarcity (>2.0-5.0)",
      wsb_n == 5 ~ "Severe Blue Water Scarcity (>5.0)"
    )
  ) %>%
  dplyr::select(HYBAS_ID, wsb_raw:wsb_label)
```

#### 3.1.4. Join datasets and Export

```{r}
wa_n <- h6 %>%
  st_join(bws_n, largest = TRUE) %>%
  left_join(wdp_n, by = "HYBAS_ID") %>%
  left_join(wsb_n, by = "HYBAS_ID")
```

```{r}
write_rds(wa_n, here("output", "wa_n.rds"))
```

### 3.2. Water Pollution

#### 3.2.1. Coastal Eutrophication Potential

```{r}
cep_n <- cep %>%
  dplyr::select(cep_raw, cep_n = cep_cat, cep_label, geometry = Shape)
```

#### 3.2.2. Nitrate-Nitrite Concentration

*Get mean predicted values between 2006 and 2010, then rasterize*
```{r}
nox <- nox_csv %>%
  filter(year >= 2006) %>%
  group_by(OBJECTID) %>%
  summarise(value = mean(preds)) %>%
  right_join(sp_grid, by = "OBJECTID") %>%
  dplyr::select(-OBJECTID) %>%
  st_as_sf(coords = c("Lon", "Lat"), crs = 4326) %>%
  st_rasterize(dx = 0.5, dy = 0.5) %>%
  as("Raster")
```

```{r}
nox_n <- exact_extract(nox, h6, fun = c("mean", "median", "quantile", "majority", "coefficient_of_variation"), quantiles = 0.75,
                       append_cols = "HYBAS_ID", progress = TRUE)

skim(nox_n)

filter(nox_n, coefficient_of_variation > 1) %>% nrow()/nrow(nox_n) # < 1% of h6 basins show high variability
```

```{r}
nox_n <- nox_n %>%
  mutate(
    nox_raw = median,
    nox_n = case_when(
      median <= 0.4 ~ 1,
      between(median, 0.4, 0.8) ~ 2,
      between(median, 0.8, 1.2) ~ 3,
      between(median, 1.2, 1.6) ~ 4,
      median > 1.6 ~ 5
    ),
    nox_label = case_when(
      nox_n == 1 ~ "Very Low Concentration (<=0.4)",
      nox_n == 2 ~ "Low Concentration (>0.4-0.8)",
      nox_n == 3 ~ "Moderate Concentration (>0.8-1.2)",
      nox_n == 4 ~ "High Concentration (>1.2-1.6)",
      nox_n == 5 ~ "Very High Concentration (>1.6)"
    )
  ) %>%
  dplyr::select(HYBAS_ID, nox_raw:nox_label)
```

#### 3.2.3. Periphyton Growth Potential

```{r}
tnc_n <- exact_extract(tnc, h6, fun = c("mean", "median", "quantile", "majority", "coefficient_of_variation"), quantiles = 0.75,
                       append_cols = "HYBAS_ID", progress = TRUE)

skim(tnc_n)

filter(tnc_n, coefficient_of_variation > 1) %>% nrow()/nrow(tnc_n) # 4% of h6 basins show high variability
```

```{r}
tpc_n <- exact_extract(tpc, h6, fun = c("mean", "median", "quantile", "majority", "coefficient_of_variation"), quantiles = 0.75,
                       append_cols = "HYBAS_ID", progress = TRUE)

skim(tpc_n)

filter(tpc_n, coefficient_of_variation > 1) %>% nrow()/nrow(tpc_n) # 2% of h6 basins show high variability
```

```{r}
pgp_n <- tnc_n %>%
  dplyr::select(HYBAS_ID, tnc_raw = median) %>%
  left_join(
    dplyr::select(tpc_n, HYBAS_ID, tpc_raw = median),
    by = "HYBAS_ID" 
  ) %>%
  mutate(
    ratio_n_p = tnc_raw/tpc_raw,
    limiting = if_else(ratio_n_p < 7, "N-limited", "P-limited"),
    pgp_n = case_when(
      limiting == "N-limited" & tnc_raw <= 0.4 ~ 1,
      limiting == "N-limited" & between(tnc_raw, 0.4, 0.8) ~ 2,
      limiting == "N-limited" & between(tnc_raw, 0.8, 1.2) ~ 3,
      limiting == "N-limited" & between(tnc_raw, 1.2, 1.6) ~ 4,
      limiting == "N-limited" & tnc_raw > 1.6 ~ 5,
      
      limiting == "P-limited" & tpc_raw <= 0.023 ~ 1,
      limiting == "P-limited" & between(tpc_raw, 0.023, 0.046) ~ 2,
      limiting == "P-limited" & between(tpc_raw, 0.046, 0.100) ~ 3,
      limiting == "P-limited" & between(tpc_raw, 0.100, 0.150) ~ 4,
      limiting == "P-limited" & tpc_raw > 0.150 ~ 5
    ),
    pgp_label = case_when(
      limiting == "N-limited" & pgp_n == 1 ~ "N-limited growth acceptable",
      limiting == "N-limited" & pgp_n == 2 ~ "N-limited growth acceptable",
      limiting == "N-limited" & pgp_n == 3 ~ "N-limited growth undesirable",
      limiting == "N-limited" & pgp_n == 4 ~ "N-limited growth undesirable",
      limiting == "N-limited" & pgp_n == 5 ~ "N-limited growth undesirable",
      
      limiting == "P-limited" & pgp_n == 1 ~ "P-limited growth acceptable",
      limiting == "P-limited" & pgp_n == 2 ~ "P-limited growth acceptable",
      limiting == "P-limited" & pgp_n == 3 ~ "P-limited growth undesirable",
      limiting == "P-limited" & pgp_n == 4 ~ "P-limited growth undesirable",
      limiting == "P-limited" & pgp_n == 5 ~ "P-limited growth undesirable"
    )
  ) %>%
  dplyr::select(HYBAS_ID, tnc_raw, tpc_raw, pgp_n, pgp_label)
```

#### 3.2.4. Join datasets and Export

```{r}
wp_n <- h6 %>%
  st_join(cep_n, largest = TRUE) %>%
  left_join(nox_n, by = "HYBAS_ID") %>%
  left_join(pgp_n, by = "HYBAS_ID")
```

```{r}
write_rds(wp_n, here("output", "wp_n.rds"))
```

## 4. Identify the value for the unified layer

### 4.1. Max of Water Availability

```{r}
wa_n <- read_rds(here("output", "wa_n.rds"))
```

```{r}
son_wa <- wa_n %>%
  rowwise %>%
  mutate(
    wa_max = max(c(bws_n, wdp_n, wsb_n), na.rm = TRUE),
    .after = region
  ) %>%
  ungroup()
```

### 4.2. Max of Water Pollution

```{r}
wp_n <- read_rds(here("output", "wp_n.rds"))
```

```{r}
son_wp <- wp_n %>%
  rowwise %>%
  mutate(
    wp_max = max(c(cep_n, nox_n, pgp_n), na.rm = TRUE),
    .after = region
  ) %>%
  ungroup()
```

## 5. Join final output and Export

```{r}
son_water <- son_wa %>%
  left_join(
    son_wp %>% dplyr::select(-c(WMOBB_id:region)) %>% st_drop_geometry(),
    by = "HYBAS_ID"
  ) %>%
  relocate(geometry, .after = last_col())
```

```{r}
write_rds(son_water, here("output", "sbnt_son_water.rds"))
```

```{r}
st_write(son_water, here("output", "sbnt_son_water.shp"), layer_options = "ENCODING=UTF-8", delete_layer = TRUE)
```
